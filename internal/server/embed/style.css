/* TODO: outline basic paradigm we use for styling. TL;DR:
 *
 * - Pick color and size constants once, up front, and then style everything from
 *   that pallet.
 * - Use semantic constants for colors (which are themselves defined in terms of the pallet).
 * - Use BEM-style classes for selectors.  See https://getbem.com/.
 */
:root {
	/*** Color Pallet ***/

	/** Primary Colors **/
	/* TODO: numbers, like below? */

	--sandstorm-purple: #762f87;
	--sandstorm-darkpurple: #65468e;

	/** Greys (1-9). The -a variants add an alpha of 75%. **/
	--grey-1: hsl(0 0% 10%);
	--grey-2: hsl(0 0% 20%);
	--grey-2-a: hsla(0 0% 20% / 75%);
	--grey-3: hsl(0 0% 30%);
	--grey-4: hsl(0 0% 40%);
	--grey-5: hsl(0 0% 50%);
	--grey-6: hsl(0 0% 60%);
	--grey-7: hsl(0 0% 70%);
	--grey-7-a: hsl(0 0% 70% / 75%);
	--grey-8: hsl(0 0% 80%);
	--grey-9: hsl(0 0% 90%);

	/** Accents **/
	/* each of these will have shades 1-7, but I'm choosing them as I go. */
	--red-3: hsl(0 70% 50%);
	--red-6: hsl(0 13% 50%);

	--green-6: #ddffdd;

	--yellow-3: hsl(60 100% 24%);
	--yellow-6: hsl(60 100% 83.3%);

	/*** Size Pallet ***/
	/* These names aren't terribly descriptive, but we give them names
	 * nonetheless (1) to document the values we want to use in our scale,
	 * and (2) to make it hard to accidentally use an un-approved one.
	 * We try to use symbolic constants as much as possible, defined in
	 * terms of these. */

	--sz-0: 0px;
	--sz-1: 1px;
	--sz-2: 2px;
	--sz-4: 4px;
	--sz-8: 8px;
	--sz-12: 12px;
	--sz-16: 16px;
	--sz-24: 24px;
	--sz-32: 32px;
	--sz-48: 48px;
	--sz-64: 64px;
	--sz-96: 96px;
	--sz-128: 128px;
	--sz-150: 150px;
	--sz-192: 192px;
	--sz-256: 256px;
	--sz-300: 300px;
	--sz-384: 384px;
	--sz-512: 512px;
	--sz-640: 640px;
	--sz-768: 768px;

	/*** Symbolic Constants ***/

	/**** Sizes ****/
	--sz-app-icon-app-grid: var(--sz-128);
	--sz-app-icon-grain: var(--sz-24);
	--sz-app-icon-market: var(--sz-150);
	--sz-app-icon-market-big: var(--sz-300);

	/**** Light color profile: ****/
	--error-bgcolor: var(--red-3);
	--success-bgcolor: var(--green-3);
	--warning-bgcolor: var(--yellow-3);

	--sidebar-bgcolor: var(--grey-8);
	--sidebar-bgcolor-active-tab: var(--grey-9);
	--sidebar-bgcolor-inactive-tab: var(--grey-7);
	--sidebar-color: var(--grey-1);
	--sidebar-color-active: var(--grey-1);
	--sidebar-border-color: var(--grey-6);

	--default-content-bgcolor: var(--grey-8);
	--default-content-color: var(--grey-1);

	--modal-bgcolor: var(--grey-2-a);
	--modal-content-bgcolor: var(--grey-9);
}

@media(prefers-color-scheme: dark) {
	:root {
		--error-bgcolor: var(--red-6);
		--success-bgcolor: var(--green-6);
		--warning-bgcolor: var(--yellow-6);

		--sidebar-bgcolor: var(--grey-2);
		--sidebar-bgcolor-active-tab: var(--grey-1);
		--sidebar-bgcolor-inactive-tab: var(--grey-3);
		--sidebar-color: var(--grey-9);
		--sidebar-color-active: var(--grey-9);
		--sidebar-border-color: var(--grey-3);

		--default-content-bgcolor: var(--grey-2);
		--default-content-color: var(--grey-9);

		--modal-bgcolor: var(--grey-7-a);
		--modal-content-bgcolor: var(--grey-2);
	}
}

body {
	margin: 0px;
	padding: 0px;
}

.close-button {
	color: transparent;
	background-color: transparent;
	background-image: url(icons/close.svg);

	/* Should be the same size as the icon, which will go in on the same row: */
	height: var(--sz-app-icon-grain);
	width: var(--sz-app-icon-grain);

	border: var(--sz-0);
	margin-left: var(--sz-4);
}
.close-button:hover {
	border: var(--sz-1) solid var(--grey-9);
	border-radius: var(--sz-2);
}

.dummy-node {
	display: none;
}

.error-notice {
	background-color: var(--error-bgcolor);
}

.grain-iframe {
	height: 100%;
	width: 100%;
	border: none;
}
.grain-iframe--inactive {
	display: none;
}

.main-ui {
	display: flex;
	flex-direction: column;
	height: 100vh;
	width: 100vw;
	font-family: sans-serif;
}
.main-ui__content {
	flex: 1;
	height: 100%;
	border: none;
}
.main-ui__main {
	display: flex;
	flex-direction: row;
	flex: 1;
}
.main-ui__sidebar {
	background-color: var(--sidebar-bgcolor);
	color: var(--sidebar-color);
	width: var(--sz-192);
}
.main-ui__sidebar a {
	color: var(--sidebar-color);
}

.modal-dialog {
	display: flex;
	justify-content: space-around;
	align-items: center;
	position: absolute;
	width: 100%;
	height: 100%;
	background-color: var(--modal-bgcolor);
}

.modal-dialog__popup {
	background-color: var(--modal-content-bgcolor);
	border-radius: var(--sz-16);
	padding: var(--sz-32);
	display: grid;
}

.modal-dialog__close {
	grid-column: 2;
	grid-row: 1;
}

.modal-dialog__content {
	grid-column: 1;
	grid-row: 1;
}


.nav-links {
	list-style: none;
	padding-left: 0px;
}

.open-grain-menu-item {
	margin-left: var(--sz-8);
	padding-left: var(--sz-32);
	background-image: url(icons/share.svg);
	background-repeat: no-repeat;
}
.open-grain-menu-share-item {
	background-image: url(icons/share.svg);
}

:root {
	--sz-open-grain-tab-radius: var(--sz-8);
	--sz-open-grain-tab-padding: var(--sz-4);
	--sz-open-grain-tab-margin: var(--sz-1);
}
.open-grain-tab {
	border-top-left-radius: var(--sz-open-grain-tab-radius);
	border-bottom-left-radius: var(--sz-open-grain-tab-radius);
	padding: var(--sz-open-grain-tab-padding);
	margin-top: var(--sz-open-grain-tab-margin);
}
.open-grain-tab__title-row {
	display: flex;
	justify-content: space-between;
}
.open-grain-tab__title {
	color: var(--sidebar-color);
	text-decoration: none;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
.open-grain-tab--focused .open-grain-tab__title {
	color: var(--sidebar-color-active);
}
.open-grain-tab--unfocused {
	background-color: var(--sidebar-bgcolor-inactive-tab);
}
.open-grain-tab--focused {
	color: var(--sidebar-color-active);
	background-color: var(--sidebar-bgcolor-active-tab);
}

/* vim: set ts=8 sw=8 noet : */
